<template>
  <div class="forewarningTask-poup1" :key="2" >
    <!-- 弹框内容 -->
    <div>
      <el-form :model="dialogForm" :rules="rules" ref="searchForm" label-width="114px">
        <el-row :gutter="20">
          <el-col :span="8">
            <el-form-item label="主体名称：" prop="subjectName" :rules="[{validator: isValidInput, trigger: 'blur'}]">
              <el-input v-model="dialogForm.subjectName" maxlength="50" placeholder="最长50字符数" ></el-input>
            </el-form-item>
          </el-col>

          <el-col :span="8">
            <el-form-item label="证件类型：" prop="certificateType">
              <el-select v-model="dialogForm.certificateType" @change="certificate" placeholder="请选择" filterable>
                <el-option v-for="(item,index) in certificateTypeArr" :key="index" :label="item.codeName" :value="item.codeId"></el-option>
              </el-select>
            </el-form-item>
          </el-col>
          <el-col :span="8">
            <el-form-item label="证件号码：" prop="certificateNum">
              <el-input v-model="dialogForm.certificateNum" maxlength="128" placeholder="最长128字符数" ></el-input>
            </el-form-item>
          </el-col>
          </el-row>
          <el-row :gutter="20">
          <el-col :span="8">
            <el-form-item label="账户号码："  prop="suspiciousAccout" :rules="[{validator: isValidInput, trigger: 'blur'}]">
              <el-input v-model="dialogForm.suspiciousAccout" maxlength="64" placeholder="最长64字符数" ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <div style="textAlign:right" class="searchBtn">
          <el-button type="primary" @click='queryData'>查询</el-button>
          <el-button type="primary" @click="cleanUp">清空</el-button>
        </div>
        <div>
          <el-table :data="tableData" @selection-change="handelSelect" ref="poupTable" :key="2">
            <el-table-column type="selection" width="80"></el-table-column>
            <el-table-column label="序号" type="index" fixed="left"></el-table-column>
            <el-table-column prop="subjectName" label="主体名称" min-width="140" show-overflow-tooltip></el-table-column>
            <el-table-column prop="certificateType" label="证件类型" min-width="140" show-overflow-tooltip></el-table-column>
            <el-table-column prop="certificateNum" label="证件号码" min-width="140" show-overflow-tooltip></el-table-column>
            <el-table-column label="账号" min-width="140" show-overflow-tooltip>
              <template slot-scope="scope">
                <el-tooltip class="item" effect="dark" placement="top-start">
                  <template slot="content">
                    <div style="margin-bottom:10px" v-for="(item,index) in scope.row.susAccountDOList" :key="index">
                      {{item.suspiciousAccout}}
                    </div>
                  </template>
                  <span v-for="(item,index) in scope.row.susAccountDOList" :key="index">{{item.suspiciousAccout}}</span>
                </el-tooltip>

              </template>
            </el-table-column>
          </el-table>
          <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="pageInfo.pageNum" :page-size="pageInfo.pagesize" layout="total, sizes, prev, pager, next, jumper" :total="pageInfo.total" background>
          </el-pagination>
        </div>
      </el-form>
      <div style="textAlign:right; paddingTop:20px">
        <el-button type="primary" @click="add">添 加</el-button>
        <el-button @click="clearSelect">返 回</el-button>
      </div>
    </div>

  </div>
</template>

<script>
import { analyst } from '@/api/sys-monitoringAnalysis/roster-warning/warning-task.js'
import { dictionary } from '@/api/sys-monitoringAnalysis/roster-warning/common.js'
import { commonPattern, adminisValidInput } from '@/utils/formValidate'
export default {
  data() {
    return {
      dialogForm: {
        subjectName: '',
        certificateType: '',
        certificateNum: '',
        suspiciousAccout: ''
      },
      certificateTypeArr: [],
      tableData: [],
      selectArr: [],
      yesOrNot: '',
      pageInfo: {
        pageNum: 1,
        pageSize: 10,
        total: 0
      },
      rules: {
        certificateNum: [{ min: 6, message: '请输入至少6位字符数', trigger: 'blur' }, { validator: adminisValidInput, trigger: 'blur' }]
      }
    }
  },
  computed: {
    searchParams() {
      const obj = Object.assign({}, this.dialogForm)
      delete obj.total
      return obj
    }
  },
  methods: {
    // 获取数据字典
    getDictionary(params) {
      dictionary(params).then(res => {
        if (res.code === 200) {
          switch (params) {
            case 'SFZJ':
              this.certificateTypeArr = res.data
              break
            default:
              break
          }
        }
      })
    },
    isValidInput(rule, value, callback) {
      if (!commonPattern.spaceBar.test(value)) {
        callback(new Error('内容不能含有空格'))
      } else if (commonPattern.specialChar.test(value) || commonPattern.specialEng.test(value)) {
        callback(new Error('内容不能填写特殊字符'))
      } else {
        callback()
      }
    },

    // 切换分页条数
    handleSizeChange(size) {
      this.pageInfo.pageSize = size
      this.fetchData()
    },
    // 点击切换分页
    handleCurrentChange(pageNum) {
      this.pageInfo.pageNum = pageNum
      this.fetchData()
    },
    queryData() {
      this.pageInfo.pageNum = 1
      this.params = Object.assign({}, this.searchParams, this.pageInfo)
      this.fetchData()
    },
    // 请求数据
    fetchData() {
      this.params = Object.assign({}, this.params, this.pageInfo)
      analyst(this.params).then(res => {
        if (res.code === 200) {
          // lcnId laId subjectName sourceBusiness sourceDire  iNum证件号码  wType：类型  subjectType impName  listSourceDocNum remark listAccountDOList
          res.data.list.forEach(item => {
            item.iNum = item.certificateNum
            item.wType = 'analyst'
            item.subjectType = item.subjectType
            item.subjectIType = item.certificateType
            item.listAccountDOList = []
            if (item.susAccountDOList) {
              item.susAccountDOList.forEach(item2 => {
                item.listAccountDOList.push({ accNum: item2.suspiciousAccout })
              })
            }
          })
          this.tableData = res.data.list
          this.pageInfo.total = res.data.total
        }
      })
    },
    handelSelect(val) {
      this.selectArr = val
    },
    add() {
      if (this.selectArr.length > 0) {
        this.$confirm(`是否需要进行历史交易监测`, '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          this.yesOrNot = '0'
          this.dataFn()
        }).catch(() => {
          this.yesOrNot = '1'
          this.dataFn()
        })
      } else {
        this.dialogFormVisible = false
        this.$emit('listFn', {
          Visible: this.dialogFormVisible
        })
      }
    },
    clearSelect() {
      this.dialogFormVisible = false

      this.dataFn()
    },
    dataFn() {
      this.$emit('listFn', {
        Visible: this.dialogFormVisible,
        selectArr: this.selectArr,
        yesOrNot: this.yesOrNot,
        showTableItem: 'analyst'
      })
    },
    cleanUp() {
      this.$refs.searchForm.resetFields()
    },
    // 证件类型校验
    certificate() {
      switch (this.dialogForm.certificateType) {
        case '110003':
          this.rules.certificateNum = [
            { message: '请填正确的身份证号码', trigger: 'blur' },
            { min: 6, max: 128, message: '长度为6-128位', trigger: 'blur' },
            { validator: adminisValidInput, trigger: 'blur' }
          ]
          break
        case '110001':
          this.rules.certificateNum = [
            { message: '请填正确的身份证号码', trigger: 'blur' },
            { min: 6, max: 128, message: '长度为6-128位', trigger: 'blur' },
            { validator: adminisValidInput, trigger: 'blur' }
          ]
          break
        case '':
          this.rules.certificateNum = [{ validator: adminisValidInput, trigger: 'blur' }]
          break
        default:
          this.rules.certificateNum = [{ min: 6, message: '请输入至少6位字符数', trigger: 'blur' }, { max: 128, validator: adminisValidInput, trigger: 'change' }]
          break
      }
    }
  },
  mounted() {
    this.fetchData()
    this.getDictionary('SFZJ')
  }
}
</script>

<style lang="scss">
.forewarningTask-poup1 {
  .el-select {
    width: 100%;
  }
}
</style>